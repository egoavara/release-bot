// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AgentArgs } from "./agent";
export type Agent = import("./agent").Agent;
export const Agent: typeof import("./agent").Agent = null as any;
utilities.lazyLoad(exports, ["Agent"], () => require("./agent"));

export { AgentListArgs } from "./agentList";
export type AgentList = import("./agentList").AgentList;
export const AgentList: typeof import("./agentList").AgentList = null as any;
utilities.lazyLoad(exports, ["AgentList"], () => require("./agentList"));

export { AgentPatchArgs } from "./agentPatch";
export type AgentPatch = import("./agentPatch").AgentPatch;
export const AgentPatch: typeof import("./agentPatch").AgentPatch = null as any;
utilities.lazyLoad(exports, ["AgentPatch"], () => require("./agentPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:agent.k8s.elastic.co/v1alpha1:Agent":
                return new Agent(name, <any>undefined, { urn })
            case "kubernetes:agent.k8s.elastic.co/v1alpha1:AgentList":
                return new AgentList(name, <any>undefined, { urn })
            case "kubernetes:agent.k8s.elastic.co/v1alpha1:AgentPatch":
                return new AgentPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "agent.k8s.elastic.co/v1alpha1", _module)
