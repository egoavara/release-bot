// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ApmServerArgs } from "./apmServer";
export type ApmServer = import("./apmServer").ApmServer;
export const ApmServer: typeof import("./apmServer").ApmServer = null as any;
utilities.lazyLoad(exports, ["ApmServer"], () => require("./apmServer"));

export { ApmServerListArgs } from "./apmServerList";
export type ApmServerList = import("./apmServerList").ApmServerList;
export const ApmServerList: typeof import("./apmServerList").ApmServerList = null as any;
utilities.lazyLoad(exports, ["ApmServerList"], () => require("./apmServerList"));

export { ApmServerPatchArgs } from "./apmServerPatch";
export type ApmServerPatch = import("./apmServerPatch").ApmServerPatch;
export const ApmServerPatch: typeof import("./apmServerPatch").ApmServerPatch = null as any;
utilities.lazyLoad(exports, ["ApmServerPatch"], () => require("./apmServerPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:apm.k8s.elastic.co/v1alpha1:ApmServer":
                return new ApmServer(name, <any>undefined, { urn })
            case "kubernetes:apm.k8s.elastic.co/v1alpha1:ApmServerList":
                return new ApmServerList(name, <any>undefined, { urn })
            case "kubernetes:apm.k8s.elastic.co/v1alpha1:ApmServerPatch":
                return new ApmServerPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "apm.k8s.elastic.co/v1alpha1", _module)
