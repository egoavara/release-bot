// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ElasticsearchAutoscalerArgs } from "./elasticsearchAutoscaler";
export type ElasticsearchAutoscaler = import("./elasticsearchAutoscaler").ElasticsearchAutoscaler;
export const ElasticsearchAutoscaler: typeof import("./elasticsearchAutoscaler").ElasticsearchAutoscaler = null as any;
utilities.lazyLoad(exports, ["ElasticsearchAutoscaler"], () => require("./elasticsearchAutoscaler"));

export { ElasticsearchAutoscalerListArgs } from "./elasticsearchAutoscalerList";
export type ElasticsearchAutoscalerList = import("./elasticsearchAutoscalerList").ElasticsearchAutoscalerList;
export const ElasticsearchAutoscalerList: typeof import("./elasticsearchAutoscalerList").ElasticsearchAutoscalerList = null as any;
utilities.lazyLoad(exports, ["ElasticsearchAutoscalerList"], () => require("./elasticsearchAutoscalerList"));

export { ElasticsearchAutoscalerPatchArgs } from "./elasticsearchAutoscalerPatch";
export type ElasticsearchAutoscalerPatch = import("./elasticsearchAutoscalerPatch").ElasticsearchAutoscalerPatch;
export const ElasticsearchAutoscalerPatch: typeof import("./elasticsearchAutoscalerPatch").ElasticsearchAutoscalerPatch = null as any;
utilities.lazyLoad(exports, ["ElasticsearchAutoscalerPatch"], () => require("./elasticsearchAutoscalerPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:autoscaling.k8s.elastic.co/v1alpha1:ElasticsearchAutoscaler":
                return new ElasticsearchAutoscaler(name, <any>undefined, { urn })
            case "kubernetes:autoscaling.k8s.elastic.co/v1alpha1:ElasticsearchAutoscalerList":
                return new ElasticsearchAutoscalerList(name, <any>undefined, { urn })
            case "kubernetes:autoscaling.k8s.elastic.co/v1alpha1:ElasticsearchAutoscalerPatch":
                return new ElasticsearchAutoscalerPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "autoscaling.k8s.elastic.co/v1alpha1", _module)
